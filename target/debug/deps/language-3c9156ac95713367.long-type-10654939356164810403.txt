nom::Map<impl nom::Parser<_, Output = Option<<Choice<(impl (Fn(_) -> std::result::Result<(_, _), nom::internal::Err<_>>) + Clone, impl (Fn(_) -> std::result::Result<(_, _), nom::internal::Err<_>>) + Clone)> as nom::Parser<_>>::Output>, Error = _>, {closure@src/parse/expression.rs:37:48: 37:54}>
nom::Map<impl nom::Parser<_, Output = Option<<Choice<(impl (Fn(_) -> std::result::Result<(_, _), nom::internal::Err<_>>) + Clone, impl (Fn(_) -> std::result::Result<(_, _), nom::internal::Err<_>>) + Clone)> as nom::Parser<_>>::Output>, Error = _>, {closure@src/parse/expression.rs:37:48: 37:54}>: nom::Parser<LocatedSpan<&str>>
(nom::Map<impl nom::Parser<_, Output = Option<<Choice<(impl (Fn(_) -> std::result::Result<(_, _), nom::internal::Err<_>>) + Clone, impl (Fn(_) -> std::result::Result<(_, _), nom::internal::Err<_>>) + Clone)> as nom::Parser<_>>::Output>, Error = _>, {closure@src/parse/expression.rs:37:48: 37:54}>, nom::Map<fn(LocatedSpan<&str>) -> std::result::Result<(LocatedSpan<&str>, LocatedSpan<&str>), nom::Err<_>> {nom::character::complete::digit1::<LocatedSpan<&str>, _>}, {closure@src/parse/expression.rs:42:24: 42:38}>)
