for<'a> fn(&'a str) -> std::result::Result<(ast::Span<'a>, source::Type<'a>), nom::Err<GenericErrorTree<ast::Span<'a>, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {unit_type}
(nom::Map<for<'a> fn(ast::Span<'a>) -> std::result::Result<(ast::Span<'a>, ast::Span<'a>), nom::Err<GenericErrorTree<ast::Span<'a>, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {parse::type_identifier}, fn(ast::Span<'_>) -> source::Type<'_> {source::Type::<'_>::Identifier}, ast::Span<'_>>, nom::Map<for<'a> fn(ast::Span<'a>) -> std::result::Result<(ast::Span<'a>, String), nom::Err<GenericErrorTree<ast::Span<'a>, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {parse::value_identifier}, fn(ast::Span<'_>) -> source::Type<'_> {source::Type::<'_>::Identifier}, String>, for<'a> fn(&'a str) -> std::result::Result<(ast::Span<'a>, source::Type<'a>), nom::Err<GenericErrorTree<ast::Span<'a>, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {tuple_type}, for<'a> fn(&'a str) -> std::result::Result<(ast::Span<'a>, source::Type<'a>), nom::Err<GenericErrorTree<ast::Span<'a>, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {record_type}, for<'a> fn(&'a str) -> std::result::Result<(ast::Span<'a>, source::Type<'a>), nom::Err<GenericErrorTree<ast::Span<'a>, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {unit_type}, impl FnMut(ast::Span<'_>) -> std::result::Result<(ast::Span<'_>, _), nom::Err<GenericErrorTree<ast::Span<'_>, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>>)
