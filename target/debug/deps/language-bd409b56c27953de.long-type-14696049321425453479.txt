syntax::Error: nom::error::ParseError<LocatedSpan<&str>>
Choice<(nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:117:26: 117:29}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:118:26: 118:29}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:119:26: 119:29}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:120:26: 120:29}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:121:26: 121:29}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:122:26: 122:29}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:123:26: 123:29}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:124:26: 124:29}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:125:26: 125:29}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:126:26: 126:29}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:127:25: 127:28}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:128:26: 128:29}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:129:25: 129:28}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:130:26: 130:29}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:131:25: 131:28}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:132:25: 132:28}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:133:25: 133:28}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:134:25: 134:28}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:135:25: 135:28}>, nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = (), Error = syntax::Error>, {closure@src/parse/expression.rs:136:25: 136:28}>)>
for<'a> fn(LocatedSpan<&'a str>) -> std::result::Result<(LocatedSpan<&'a str>, ast::Located<Pattern_>), nom::Err<syntax::Error>> {parse::pattern::pattern}
for<'a> fn(LocatedSpan<&'a str>) -> std::result::Result<(LocatedSpan<&'a str>, ast::Located<source::Expr_>), nom::Err<syntax::Error>> {parse::expression::expression}
for<'a> fn(LocatedSpan<&'a str>) -> std::result::Result<(LocatedSpan<&'a str>, ast::Located<Pattern_>), nom::Err<syntax::Error>> {parse::pattern::term}
for<'a> fn(LocatedSpan<&'a str>) -> std::result::Result<(LocatedSpan<&'a str>, String), nom::Err<syntax::Error>> {import_hierarchy}
for<'a> fn(LocatedSpan<&'a str>) -> std::result::Result<(LocatedSpan<&'a str>, String), nom::Err<syntax::Error>> {parse::value_identifier}
for<'a> fn(LocatedSpan<&'a str>) -> std::result::Result<(LocatedSpan<&'a str>, ast::Located<Type_>), nom::Err<syntax::Error>> {parse::tipe::term}
for<'a> fn(LocatedSpan<&'a str>) -> std::result::Result<(LocatedSpan<&'a str>, String), nom::Err<syntax::Error>> {_value_identifier}
for<'a> fn(LocatedSpan<&'a str>) -> std::result::Result<(LocatedSpan<&'a str>, String), nom::Err<syntax::Error>> {_type_identifier}
