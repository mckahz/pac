nom::Map<fn(LocatedSpan<&str>) -> std::result::Result<(LocatedSpan<&str>, LocatedSpan<&str>), nom::Err<_>> {nom::character::complete::digit1::<LocatedSpan<&str>, _>}, {closure@src/parse/expression.rs:40:24: 40:38}>
nom::Map<fn(LocatedSpan<&str>) -> std::result::Result<(LocatedSpan<&str>, LocatedSpan<&str>), nom::Err<_>> {nom::character::complete::digit1::<LocatedSpan<&str>, _>}, {closure@src/parse/expression.rs:40:24: 40:38}>: nom::Parser<&str>
(nom::Map<impl nom::Parser<&str, Output = Option<<Choice<(impl Fn(&str) -> std::result::Result<(&str, &str), nom::Err<_>>, impl Fn(&str) -> std::result::Result<(&str, &str), nom::Err<_>>)> as nom::Parser<&str>>::Output>, Error = _>, {closure@src/parse/expression.rs:35:48: 35:54}>, nom::Map<fn(LocatedSpan<&str>) -> std::result::Result<(LocatedSpan<&str>, LocatedSpan<&str>), nom::Err<_>> {nom::character::complete::digit1::<LocatedSpan<&str>, _>}, {closure@src/parse/expression.rs:40:24: 40:38}>)
