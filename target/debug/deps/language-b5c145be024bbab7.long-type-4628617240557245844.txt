nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = Vec<<for<'a> fn(LocatedSpan<&'a str>) -> std::result::Result<(LocatedSpan<&'a str>, (String, Vec<ast::Located<Type_>>)), nom::Err<syntax::Error>> {statement::constructor} as nom::Parser<LocatedSpan<&str>>>::Output>, Error = syntax::Error>, {closure@src/parse/statement.rs:25:55: 25:69}>
nom::Map<impl nom::Parser<LocatedSpan<&str>, Output = Vec<<for<'a> fn(LocatedSpan<&'a str>) -> std::result::Result<(LocatedSpan<&'a str>, (String, Vec<ast::Located<Type_>>)), nom::Err<syntax::Error>> {statement::constructor} as nom::Parser<LocatedSpan<&str>>>::Output>, Error = syntax::Error>, {closure@src/parse/statement.rs:25:55: 25:69}>: nom::Parser<_>
