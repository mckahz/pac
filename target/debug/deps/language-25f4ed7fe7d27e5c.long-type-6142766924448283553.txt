Choice<(nom::Map<impl nom::Parser<_, Output = (), Error = _>, {closure@src/parse/pattern.rs:16:25: 16:28}>, nom::Map<impl nom::Parser<_, Output = (), Error = _>, {closure@src/parse/pattern.rs:17:26: 17:29}>, fn(String) -> std::result::Result<(LocatedSpan<&str>, source::Pattern), nom::Err<nom::error::Error<LocatedSpan<&str>>>> {tuple_pattern}, impl nom::Parser<String, Output = _, Error = _>, nom::Map<for<'a> fn(LocatedSpan<&'a str>) -> std::result::Result<(LocatedSpan<&'a str>, String), nom::Err<nom::error::Error<LocatedSpan<&'a str>>>> {parse::value_identifier}, {closure@src/parse/pattern.rs:20:30: 20:37}>, nom::Map<impl FnMut(String) -> std::result::Result<(String, (String, Vec<source::Pattern>)), nom::Err<_>>, {closure@src/parse/pattern.rs:21:51: 21:64}>)>
