nom::Map<for<'a> fn(&'a str) -> std::result::Result<(&'a str, String), nom::Err<GenericErrorTree<&'a str, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {parse::value_identifier}, fn(LocatedSpan<&str>) -> source::Type {source::Type::Identifier}, String>
GenericErrorTree<&str, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>
nom::Map<for<'a> fn(&'a str) -> std::result::Result<(&'a str, String), nom::Err<GenericErrorTree<&'a str, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {parse::value_identifier}, fn(LocatedSpan<&str>) -> source::Type {source::Type::Identifier}, String>: nom::Parser<&str, source::Type, GenericErrorTree<&str, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>
(nom::Map<for<'a> fn(&'a str) -> std::result::Result<(&'a str, String), nom::Err<GenericErrorTree<&'a str, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {parse::type_identifier}, fn(LocatedSpan<&str>) -> source::Type {source::Type::Identifier}, String>, nom::Map<for<'a> fn(&'a str) -> std::result::Result<(&'a str, String), nom::Err<GenericErrorTree<&'a str, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {parse::value_identifier}, fn(LocatedSpan<&str>) -> source::Type {source::Type::Identifier}, String>, for<'a> fn(&'a str) -> std::result::Result<(&'a str, source::Type), nom::Err<GenericErrorTree<&'a str, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {tuple_type}, for<'a> fn(&'a str) -> std::result::Result<(&'a str, source::Type), nom::Err<GenericErrorTree<&'a str, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {record_type}, for<'a> fn(&'a str) -> std::result::Result<(&'a str, source::Type), nom::Err<GenericErrorTree<&'a str, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {unit_type}, impl FnMut(&str) -> std::result::Result<(&str, source::Type), nom::Err<GenericErrorTree<&str, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>>)
