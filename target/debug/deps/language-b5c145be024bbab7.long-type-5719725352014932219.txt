Choice<(impl nom::Parser<LocatedSpan<&str>, Output = ast::Located<Pattern_>, Error = _>, impl nom::Parser<LocatedSpan<&str>, Output = ast::Located<Pattern_>, Error = _>, for<'a> fn(LocatedSpan<&'a str>) -> std::result::Result<(LocatedSpan<&'a str>, ast::Located<Pattern_>), nom::Err<nom::error::Error<LocatedSpan<&'a str>>>> {tuple_pattern}, impl nom::Parser<LocatedSpan<&str>, Output = Pattern_, Error = nom::error::Error<LocatedSpan<&str>>>, impl nom::Parser<LocatedSpan<&str>, Output = ast::Located<Pattern_>, Error = nom::error::Error<LocatedSpan<&str>>>, impl nom::Parser<LocatedSpan<&str>, Output = ast::Located<Pattern_>, Error = nom::error::Error<LocatedSpan<&str>>>)>
