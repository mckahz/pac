for<'a> fn(LocatedSpan<&'a str>) -> std::result::Result<(LocatedSpan<&'a str>, String), nom::Err<nom::error::Error<LocatedSpan<&'a str>>>> {parse::type_identifier}
(for<'a> fn(LocatedSpan<&'a str>) -> std::result::Result<(LocatedSpan<&'a str>, String), nom::Err<nom::error::Error<LocatedSpan<&'a str>>>> {parse::type_identifier}, impl nom::Parser<String, Output = Vec<<fn(String) -> std::result::Result<(LocatedSpan<&str>, ast::Located<Pattern_>), nom::Err<nom::error::Error<LocatedSpan<&str>>>> {parse::pattern::term} as nom::Parser<String>>::Output>, Error = <fn(String) -> std::result::Result<(LocatedSpan<&str>, ast::Located<Pattern_>), nom::Err<nom::error::Error<LocatedSpan<&str>>>> {parse::pattern::term} as nom::Parser<String>>::Error>)
