Choice<(nom::Map<impl nom::Parser<_, Output = (), Error = _>, {closure@src/parse/pattern.rs:24:25: 24:28}>, nom::Map<impl nom::Parser<_, Output = (), Error = _>, {closure@src/parse/pattern.rs:25:26: 25:29}>, for<'a> fn(LocatedSpan<&'a str>) -> std::result::Result<(LocatedSpan<&'a str>, ast::Located<Pattern_>), nom::Err<nom::error::Error<LocatedSpan<&'a str>>>> {tuple_pattern}, impl nom::Parser<LocatedSpan<&str>, Output = ast::Located<Pattern_>, Error = nom::error::Error<LocatedSpan<&str>>>, nom::Map<for<'a> fn(LocatedSpan<&'a str>) -> std::result::Result<(LocatedSpan<&'a str>, String), nom::Err<nom::error::Error<LocatedSpan<&'a str>>>> {parse::value_identifier}, {closure@src/parse/pattern.rs:28:30: 28:37}>, nom::Map<impl FnMut(LocatedSpan<&str>) -> std::result::Result<(LocatedSpan<&str>, (String, Vec<Pattern_>)), nom::Err<nom::error::Error<LocatedSpan<&str>>>>, {closure@src/parse/pattern.rs:29:51: 29:64}>)>
