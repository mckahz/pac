Choice<(fn({type error}) -> std::result::Result<({type error}, source::Expr<'_>), nom::Err<GenericErrorTree<{type error}, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {if_expr::<'_>}, fn({type error}) -> std::result::Result<({type error}, source::Expr<'_>), nom::Err<GenericErrorTree<{type error}, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {when_expr::<'_>}, fn({type error}) -> std::result::Result<({type error}, source::Expr<'_>), nom::Err<GenericErrorTree<{type error}, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {lambda::<'_>}, fn({type error}) -> std::result::Result<({type error}, source::Expr<'_>), nom::Err<GenericErrorTree<{type error}, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {crash_expr::<'_>}, fn({type error}) -> std::result::Result<({type error}, source::Expr<'_>), nom::Err<GenericErrorTree<{type error}, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {extern_expr::<'_>}, fn({type error}) -> std::result::Result<({type error}, source::Expr<'_>), nom::Err<GenericErrorTree<{type error}, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {operator_expression::<'_>}, fn({type error}) -> std::result::Result<({type error}, source::Expr<'_>), nom::Err<GenericErrorTree<{type error}, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {let_from::<'_>}, fn({type error}) -> std::result::Result<({type error}, source::Expr<'_>), nom::Err<GenericErrorTree<{type error}, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {let_in::<'_>}, fn({type error}) -> std::result::Result<({type error}, source::Expr<'_>), nom::Err<GenericErrorTree<{type error}, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {parse::expression::term::<'_>}, fn({type error}) -> std::result::Result<({type error}, source::Expr<'_>), nom::Err<GenericErrorTree<{type error}, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>> {tuple_expression::<'_>}, impl FnMut({type error}) -> std::result::Result<({type error}, _), nom::Err<GenericErrorTree<{type error}, &'static str, &'static str, Box<(dyn std::error::Error + Send + Sync + 'static)>>>>)>
